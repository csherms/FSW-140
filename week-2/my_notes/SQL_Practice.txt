// SQL PRACTICE


// 1. Retrieve everything from a table
   SELECT * FROM cd.facilities;


// 2. Retrieve specific columns from a table
   SELECT name, membercost FROM cd.facilities;



// 3 && 4. Control which rows are retrieved

       SELECT * FROM cd.facilities WHERE membercost > 0;

      (wrong)  SELECT facid, name, membercost, monthlymaintenance FROM cd.facilities 
      WHERE membercost < monthlymaintenance * 0.02;



// 5. Basic string searches
   SELECT * FROM cd.facilities WHERE name LIKE '%Tennis%';
 


// 6.  Matching against multiple possible values
   SELECT * FROM cd.facilities WHERE facid IN (1,5);



// 7. Classify results into buckets;
   SELECT name,
	CASE WHEN monthlymaintenance > 100 THEN
	'expensive'
	ELSE
	'cheap'
	END AS cost
	FROM cd.facilities



// 8. Working with dates
   SELECT memid, surname, firstname, joindate FROM cd.members 
   WHERE joindate >= '2012-09-01';



// 9. Removing duplicates, and ordering results
   (wrong)   SELECT surname FROM cd.members WHERE memid BETWEEN 1 AND 10;
   (wrong because no duplicates allowed.)
   (wrong)  SELECT DISTINCT surname FROM cd.members LIMIT 10;

   SELECT DISTINCT surname FROM cd.members ORDER BY surname LIMIT 10;



// 10. Combining results from multiple queries
(wrong)  SELECT surname FROM cd.members AND name FROM cd.facilities;

SELECT surname FROM cd.members UNION SELECT name FROM cd.facilities;



// 11. Simple aggregation
   SELECT MAX (joindate) AS LATEST FROM cd.members;



// 12. More aggregation
   SELECT firstname, surname, joindate FROM cd.members 
   WHERE joindate = (SELECT MAX (joindate) FROM cd.members)
   














